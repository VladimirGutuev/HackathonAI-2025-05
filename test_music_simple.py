#!/usr/bin/env python3
import requests
import json

def test_music_only():
    print("üéµ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
    
    data = {
        'diary_text': '–¢—è–∂–µ–ª—ã–π –¥–µ–Ω—å –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ. –î–µ—Ä–∂–∏–º—Å—è.',
        'generation_types[]': ['music']
    }
    
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
    try:
        response = requests.post('http://localhost:5000/analyze', data=data, timeout=120)  # 2 –º–∏–Ω—É—Ç—ã
        print(f"üìä Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
            print(f"üìÑ –ö–ª—é—á–∏ –æ—Ç–≤–µ—Ç–∞: {list(result.keys())}")
            
            if 'music_generation_status' in result:
                music = result['music_generation_status']
                print(f"üéº –ú—É–∑—ã–∫–∞ —Å—Ç–∞—Ç—É—Å: {music.get('status')}")
                print(f"üÜî Task ID: {music.get('task_id', '–ù–ï–¢')}")
                return music.get('task_id')
            else:
                print("‚ùå –ù–µ—Ç –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞")
                print(f"üìã –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(result, ensure_ascii=False, indent=2)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

if __name__ == "__main__":
    task_id = test_music_only()
    if task_id:
        print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω task_id: {task_id}")
        print("üîç –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ /check_music_status")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å task_id") 